package org.zhangyc.test.guava.cache;import com.google.common.cache.CacheBuilder;import com.google.common.cache.CacheLoader;import com.google.common.cache.LoadingCache;import java.util.concurrent.ExecutionException;import java.util.concurrent.TimeUnit;import java.util.concurrent.atomic.AtomicLong;/** * Created by user on 16/7/27. */public class Test {    public static void main(String[] args) throws ExecutionException {        LoadingCache<Long, AtomicLong> counter =                CacheBuilder.newBuilder().expireAfterWrite(2, TimeUnit.SECONDS)                .build(new CacheLoader<Long, AtomicLong>() {                    @Override                    public AtomicLong load(Long aLong) throws Exception {                        return new AtomicLong(0);                    }                });        long limiter = 1000;        while(true){            long currentSeconds = System.currentTimeMillis() / 1000;            if(counter.get(currentSeconds).incrementAndGet() > limiter){                System.out.println("限流了:" + currentSeconds);                continue;            }        }    }}